searchState.loadedDescShard("socket2", 0, "Utilities for creating and using sockets.\nAn address assigned to an interface.\nType corresponding to <code>SOCK_DGRAM</code>.\nSpecification of the communication domain for a socket.\nProtocol corresponding to <code>ICMPv4</code>.\nProtocol corresponding to <code>ICMPv6</code>.\nDomain for IPv4 communication, corresponding to <code>AF_INET</code>.\nDomain for IPv6 communication, corresponding to <code>AF_INET6</code>.\nAn interface index.\nA local interface specified by its index or an address …\nA version of <code>IoSliceMut</code> that allows the buffer to be …\nConfiguration of a <code>sendmsg(2)</code> system call.\nConfiguration of a <code>recvmsg(2)</code> system call.\nProtocol specification used for creating sockets via …\nType corresponding to <code>SOCK_RAW</code>.\nFlags for incoming messages.\nType corresponding to <code>SOCK_SEQPACKET</code>.\nType corresponding to <code>SOCK_STREAM</code>.\nThe address of a socket.\nRust version of the <code>sockaddr_storage</code> type.\nA reference to a <code>Socket</code> that can be used to configure …\nOwned wrapper around a system socket.\nProtocol corresponding to <code>TCP</code>.\nConfigures a socket’s TCP keepalive parameters.\nSpecification of communication semantics on a socket.\nProtocol corresponding to <code>UDP</code>.\nDomain for Unix socket communication, corresponding to …\nAccept a new incoming connection from this listener.\nAccept a new incoming connection from this listener.\nReturns a raw pointer to the address.\nReturns this address as a <code>SocketAddr</code> if it is in the …\nReturns this address as a <code>SocketAddrV4</code> if it is in the …\nReturns this address as a <code>SocketAddrV6</code> if it is in the …\nRetuns the address as the storage.\nBinds this socket to the specified address.\nGet the value of the <code>SO_BROADCAST</code> option for this socket.\nInitiate a connection on this socket to the specified …\nInitiate a connection on this socket to the specified …\nGets the length of the control buffer.\nReturns this address’s <code>Domain</code>.\nReturns this address’s family.\nReturns the flags of the message.\nReturns the correct domain for <code>address</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSee the <code>From&lt;&amp;impl AsFd&gt;</code> implementation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value of the <code>IP_HDRINCL</code> option on this socket.\nGet the value of the <code>IP_HDRINCL</code> option on this socket.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this address is in the <code>AF_INET</code> (IPv4) …\nReturns true if this address is in the <code>AF_INET6</code> (IPv6) …\nCheck if the message contains a truncated datagram.\nReturns true if this address is of a unix socket (for …\nJoin a multicast group using <code>IP_ADD_MEMBERSHIP</code> option on …\nJoin a multicast group using <code>IP_ADD_MEMBERSHIP</code> option on …\nJoin a multicast group using <code>IPV6_ADD_MEMBERSHIP</code> option on …\nJoin a multicast SSM channel using <code>IP_ADD_SOURCE_MEMBERSHIP</code>…\nGet the value of the <code>SO_KEEPALIVE</code> option on this socket.\nLeave a multicast group using <code>IP_DROP_MEMBERSHIP</code> option on …\nLeave a multicast group using <code>IP_DROP_MEMBERSHIP</code> option on …\nLeave a multicast group using <code>IPV6_DROP_MEMBERSHIP</code> option …\nLeave a multicast group using <code>IP_DROP_SOURCE_MEMBERSHIP</code> …\nReturns the size of this address in bytes.\nGet the value of the <code>SO_LINGER</code> option on this socket.\nMark a socket as ready to accept incoming connection …\nReturns the socket address of the local half of this …\nGet the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …\nGet the value of the <code>IP_MULTICAST_IF</code> option for this …\nGet the value of the <code>IPV6_MULTICAST_IF</code> option for this …\nGet the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nGet the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nGet the value of the <code>IP_MULTICAST_TTL</code> option for this …\nCreates a new socket and sets common flags.\nCreates a new <code>MaybeUninitSlice</code> wrapping a byte slice.\nCreate a new <code>MsgHdr</code> with all empty/zero fields.\nCreate a new <code>MsgHdrMut</code> with all empty/zero fields.\nCreate a <code>SockAddr</code> from the underlying storage and its …\nReturns a new, empty set of TCP keepalive parameters.\nCreates a new socket ready to be configured.\nSet <code>WSA_FLAG_NO_HANDLE_INHERIT</code> on the socket.\nGet the value of the <code>IPV6_V6ONLY</code> option for this socket.\nGet the value for the <code>SO_ORIGINAL_DST</code> option on this …\nGet the value for the <code>IP6T_SO_ORIGINAL_DST</code> option on this …\nGet value for the <code>SO_OOBINLINE</code> option on this socket.\nReceives data on the socket from the remote adress to …\nReceives data from the socket, without removing it from …\nRetrieve the sender for the data at the head of the …\nReturns the socket address of the remote peer of this …\nReturns the <code>Protocol</code> of this socket by checking the …\nGet value for the <code>SO_RCVTIMEO</code> option on this socket.\nReceives data on the socket from the remote address to …\nGet value for the <code>SO_RCVBUF</code> option on this socket.\nReceives data from the socket. On success, returns the …\nReceives data from the socket. Returns the amount of bytes …\nIdentical to <code>recv_from_vectored</code> but allows for …\nIdentical to <code>recv_from</code> but allows for specification of …\nReceives out-of-band (OOB) data on the socket from the …\nGet the value of the <code>IPV6_RECVTCLASS</code> option for this …\nGet the value of the <code>IP_RECVTOS</code> option for this socket.\nReceives data on the socket from the remote address to …\nIdentical to <code>recv_vectored</code> but allows for specification of …\nIdentical to <code>recv</code> but allows for specification of …\nGet the value of the <code>SO_REUSEADDR</code> option on this socket.\nThe integer type for the <code>ss_family</code> field on this platform.\nSends data on the socket to a connected peer.\nGet the value of the <code>SO_SNDBUF</code> option on this socket.\nSends out-of-band (OOB) data on the socket to connected …\nSends data on the socket to the given address. On success, …\nSend data to a peer listening on <code>addr</code>. Returns the amount …\nIdentical to <code>send_to_vectored</code> but allows for specification …\nIdentical to <code>send_to</code> but allows for specification of …\nSend data to the connected peer. Returns the amount of …\nIdentical to <code>send_vectored</code> but allows for specification of …\nIdentical to <code>send</code> but allows for specification of …\nSend a message on a socket using a message structure.\nSet the value of the <code>SO_BROADCAST</code> option for this socket.\nSet the value of the <code>IP_HDRINCL</code> option on this socket.\nSet the value of the <code>IP_HDRINCL</code> option on this socket.\nSet value for the <code>SO_KEEPALIVE</code> option on this socket.\nSet the length of the address.\nSet value for the <code>SO_LINGER</code> option on this socket.\nSet the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …\nSet the value of the <code>IP_MULTICAST_IF</code> option for this …\nSet the value of the <code>IPV6_MULTICAST_IF</code> option for this …\nSet the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nSet the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nSet the value of the <code>IP_MULTICAST_TTL</code> option for this …\nSets <code>HANDLE_FLAG_INHERIT</code> using <code>SetHandleInformation</code>.\nMoves this socket into or out of nonblocking mode.\nSet the value for the <code>IPV6_V6ONLY</code> option on this socket.\nSet value for the <code>SO_OOBINLINE</code> option on this socket.\nSet value for the <code>SO_RCVTIMEO</code> option on this socket.\nSet value for the <code>SO_RCVBUF</code> option on this socket.\nSet the value of the <code>IPV6_RECVTCLASS</code> option for this …\nSet the value of the <code>IP_RECVTOS</code> option for this socket.\nSet value for the <code>SO_REUSEADDR</code> option on this socket.\nSet value for the <code>SO_SNDBUF</code> option on this socket.\nSet parameters configuring TCP keepalive probes for this …\nSet the value of the <code>TCP_NODELAY</code> option on this socket.\nSet the value of the <code>IP_TOS</code> option for this socket.\nSet the value of the <code>IP_TTL</code> option for this socket.\nSet the value for the <code>IPV6_UNICAST_HOPS</code> option on this …\nSet value for the <code>SO_SNDTIMEO</code> option on this socket.\nShuts down the read, write, or both halves of this …\nReturns the size of this storage.\nThe integer type used with <code>getsockname</code> on this platform.\nGet the value of the <code>SO_ERROR</code> option on this socket.\nGet the value of the <code>TCP_KEEPCNT</code> option on this socket.\nGet the value of the <code>TCP_NODELAY</code> option on this socket.\nGet the value of the <code>IP_TOS</code> option for this socket.\nCreates a new independently owned handle to the underlying …\nInitialise a <code>SockAddr</code> by calling the function <code>init</code>.\nGet the value of the <code>IP_TTL</code> option for this socket.\nReturns the <code>Type</code> of this socket by checking the <code>SO_TYPE</code> …\nGet the value of the <code>IPV6_UNICAST_HOPS</code> option for this …\nConstructs a <code>SockAddr</code> with the family <code>AF_UNIX</code> and the …\nView this type as another type.\nSet the address (name) of the message.\nSet the mutable address (name) of the message.\nSet the buffer(s) of the message.\nSet the mutable buffer(s) of the message.\nSet the control buffer of the message.\nSet the mutable control buffer of the message.\nSet the flags of the message.\nSet the value of the <code>TCP_KEEPINTVL</code> option. On Windows, …\nSet the value of the <code>TCP_KEEPCNT</code> option.\nSet the amount of time after which TCP keepalive probes …\nGet value for the <code>SO_SNDTIMEO</code> option on this socket.\nConstruct a new storage containing all zeros.")