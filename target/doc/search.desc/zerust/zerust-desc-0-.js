searchState.loadedDescShard("zerust", 0, "Zerust\n连接管理模块\n协议编解码模块\n错误处理模块\n请求封装模块\n响应封装模块\n路由系统模块\n服务器核心模块\n表示一个TCP连接\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n创建一个新的连接实例\n从连接中异步读取一个完整的请求消息\n从连接中异步读取一个完整的响应消息\n获取远程客户端的套接字地址\n发送请求消息\n发送响应消息\n数据包处理工具\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n将消息ID和数据打包成字节向量\n解包消息头信息\n连接意外关闭错误\n无效的消息头格式错误\nIO错误，包装了标准库中的 <code>io::Error</code>\n协议错误，包含错误描述信息\nZerust 框架的错误类型\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n表示客户端发送的请求\n获取请求携带的数据\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n获取请求的消息ID\n创建一个新的请求实例\n表示服务器返回的响应\n获取响应携带的数据\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n获取响应的消息ID\n创建一个新的响应实例\n创建一个表示路由未找到的响应\n默认路由器实现\n请求处理函数类型\n路由器接口\n添加路由规则\nReturns the argument unchanged.\n处理请求并生成响应\n处理请求并生成响应\nCalls <code>U::from(self)</code>.\n创建一个新的默认路由器实例\n表示一个TCP服务器\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n创建一个新的服务器实例\n启动服务器并监听指定地址的TCP连接")